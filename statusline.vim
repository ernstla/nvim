" Powerline glyphs:
" Code points Glyphe  Description                Old code point
" U+E0A0      ÓÇ†       Version control branch     (U+2B60 ‚≠† )
" U+E0A1      ÓÇ°       LN (line) symbol           (U+2B61 ‚≠° )
" U+E0A2      ÓÇ¢       Closed padlock             (U+2B64 ‚≠§ )
" U+E0B0      ÓÇ∞       Rightwards black arrowhead (U+2B80 ‚ÆÄ )
" U+E0B1      ÓÇ±       Rightwards arrowhead       (U+2B81 ‚ÆÅ )
" U+E0B2      ÓÇ≤       Leftwards black arrowhead  (U+2B82 ‚ÆÇ )
" U+E0B3      ÓÇ≥       Leftwards arrowhead        (U+2B83 ‚ÆÉ )

" - Ernst StatusLine
highlight StatusLineNC guifg=#ffffff guibg=#0a0e1a gui=NONE ctermfg=15 ctermbg=240 cterm=NONE
highlight StatusLine guifg=#ffffff guibg=#4a4e5a gui=NONE ctermfg=15 ctermbg=240 cterm=NONE
highlight ErnstSLHighBG guifg=#000000 guibg=#ffaf00
highlight ErnstSLInactiveBG guifg=#000000 guibg=#1f424f
highlight ErnstSLInactiveFG guifg=#1f424f guibg=#131313
highlight ErnstSLHighFG guifg=#ffaf00 guibg=#131313
highlight ErnstSLNormalFG guifg=#4f727f guibg=#131313

lua << EOF
function _G.get_diagnostics(bufnr)
    local diag = vim.diagnostic.get(bufnr)
    local result = {
        errors = 0,
        warnings = 0,
        hints = 0,
        infos = 0,
        total = 0,
    }

    for i, d in pairs(diag) do
        if d.severity == 1 then
            result.errors = result.errors + 1
        elseif d.severity == 2 then
            result.warnings = result.warnings + 1
        elseif d.severity == 3 then
            result.infos = result.infos + 1
        elseif d.severity == 4 then
            result.hints = result.hints + 1
        end
    end

    result.total = result.errors + result.warnings

    return result
end
EOF

function! StatuslineGit()
    let git = fugitive#head()
    if git != ''
        return fugitive#head()
    else
        return ''
endfunction

function! StatuslineMode()
    if (mode() =~# '\v(n|no)')
        execute 'highlight ErnstSLHighBG guifg=#000000 guibg=#ffaf00'
        execute 'highlight ErnstSLHighFG guifg=#ffaf00'
        return "NORMAL ü§ü"
    elseif (mode() =~# '\v(v|V)')
        execute 'highlight ErnstSLHighBG guifg=#000000 guibg=#87af00'
        execute 'highlight ErnstSLHighFG guifg=#87af00'
        return "VISUAL ü§ü" 
    elseif mode() == "\<C-v>"
        execute 'highlight ErnstSLHighBG guifg=#000000 guibg=#87af00'
        execute 'highlight ErnstSLHighFG guifg=#87af00'
        return "BLOCK  ü§ü"
    elseif mode() == "i"
        execute 'highlight ErnstSLHighBG guifg=#000000 guibg=#0087df'
        execute 'highlight ErnstSLHighFG guifg=#0087df'
        return "INSERT ü§ü"
    else
        execute 'highlight ErnstSLHighBG guifg=#000000 guibg=#DC322F'
        execute 'highlight ErnstSLHighFG guifg=#DC322F'
        return " SHIT  ü§ü"
    endif
endfunction


function! StatuslineAle() abort
   let l:counts = v:lua.get_diagnostics(bufnr(''))
   let l:all_errors = l:counts.errors
   let l:all_non_errors = l:counts.warnings
   return l:counts.total == 0 ? 'üññ ' : printf(
   \ 'Ôîß %d  ÔÜà %d ', 
   \ l:all_non_errors,
   \ l:all_errors
   \)
   "return 'üññ '
endfunction

set laststatus=2
set statusline=

function! SetActiveStatusLine()
    setlocal statusline=
    setlocal statusline+=%#ErnstSLHighBG#
    setlocal statusline+=\ %{StatuslineMode()}
    " setlocal statusline+=%#ErnstSLHighFG#
    " setlocal statusline+=ÓÇ∞
    " setlocal statusline+=\ ÓÇ†
    setlocal statusline+=%#ErnstSLNormalFG#
    " setlocal statusline+=\ %{StatuslineGit()}
    " setlocal statusline+=\ ÓÇ±
    setlocal statusline+=\ %f
    setlocal statusline+=\ %m\ 
    setlocal statusline+=%=
    setlocal statusline+=%y\ 
    setlocal statusline+=%#ErnstSLHighFG#
    setlocal statusline+=ÔÇ¨\ 
    setlocal statusline+=%#ErnstSLNormalFG#
    setlocal statusline+=%{&fileencoding?&fileencoding:&encoding}\ 
    setlocal statusline+=%#ErnstSLHighFG#
    setlocal statusline+=\ Ôáâ\ 
    setlocal statusline+=%#ErnstSLNormalFG#
    setlocal statusline+=\%{&fileformat}\ \ 
    setlocal statusline+=%#ErnstSLHighFG#
    setlocal statusline+=Óâï\ 
    setlocal statusline+=%#ErnstSLNormalFG#
    setlocal statusline+=%p%%\ 
    setlocal statusline+=%#ErnstSLHighFG#
    setlocal statusline+=\ ÓÇ°\ 
    setlocal statusline+=%#ErnstSLNormalFG#
    setlocal statusline+=%l:%c\ \ 
    " setlocal statusline+=%#ErnstSLHighFG#
    " setlocal statusline+=ÓÇ≤
    setlocal statusline+=%#ErnstSLHighBG#
    setlocal statusline+=\ %{StatuslineAle()}
endfunction

function! SetInactiveStatusLine()
    setlocal statusline=
    setlocal statusline+=%#ErnstSLInactiveBG#
    setlocal statusline+=\ NORMAL
    setlocal statusline+=\ ü§ü
    setlocal statusline+=%#ErnstSLInactiveFG#
    " setlocal statusline+=ÓÇ∞
    setlocal statusline+=\ %f
    setlocal statusline+=\ %m\ 
    setlocal statusline+=%=
    setlocal statusline+=%y\ 
    setlocal statusline+=ÔÇ¨\  
    setlocal statusline+=%{&fileencoding?&fileencoding:&encoding}\ 
    setlocal statusline+=\ Ôáâ\ 
    setlocal statusline+=\%{&fileformat}\ \ 
    setlocal statusline+=Óâï\ 
    setlocal statusline+=%p%%\ 
    setlocal statusline+=\ ÓÇ°\ 
    setlocal statusline+=%l:%c\ \  
    setlocal statusline+=\ %{StatuslineAle()}
endfunction

augroup statusline
    autocmd!
    autocmd BufEnter,WinEnter * call SetActiveStatusLine()
    autocmd BufLeave,WinLeave * call SetInactiveStatusLine()
augroup end

call SetInactiveStatusLine()
call SetActiveStatusLine()
